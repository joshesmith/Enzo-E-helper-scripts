 Adapt {
     list = [ "slope" ];
     max_initial_level = 0;
     max_level = 3;
     min_level = -2;
     slope {
         max_coarsen = 0.000000000000000;
         min_refine = 0.001000000000000000;
         type = "particle_mass";
     };
 }

 Boundary {
     type = "periodic";
 }

 Domain {
     lower = [ -1.600000000000000e+17, -1.600000000000000e+17, -1.600000000000000e+17 ];
     upper = [ 1.600000000000000e+17, 1.600000000000000e+17, 1.600000000000000e+17 ];
 }

 Field {
     alignment = 8;
     gamma = 1.666666666666700;
     ghost_depth = 4;
     history = 1;
     list = [ "density", "velocity_x", "velocity_y", "velocity_z", "acceleration_x", "acceleration_y", "acceleration_z", "temperature", "total_energy", "internal_energy", "pressure", "density_gas", "density_particle", "density_total", "density_particle_accumulate", "potential", "potential_temp", "potential_copy", "X", "B", "X_copy", "B_copy", "diagonal", "R0", "DD_po_1", "DD_B", "Y1_bcg", "Y2_bcg", "P1_bcg", "Q2_bcg", "V1_bcg", "R1_bcg" ];
     padding = 0;
 }

 Initial {
     list = [ "pm" ];
     pm {
         mask = ((( x  *  x ) + ( y  *  y )) + ( z  *  z )) <  1.024000000000000e+33 ;
         mpp = 0.000000000000000;
         rank = 3;
     };
 }

 Mesh {
     root_blocks = [ 4, 4, 4 ];
     root_rank = 3;
     root_size = [ 16, 16, 16 ];
 }

 Method {
     check_gravity {
         particle_type = "dark";
     };
     gravity {
         accumulate = true;
         solver = "dd";
     };
     list = [ "pm_deposit", "gravity", "pm_update" ];
     pm_update {
         max_dt = 1.000000000000000;
     };
 }

 Output {
     ax {
         colormap = [ 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000 ];
         dir = "Collapse_Lmax_3_DD";
         field_list = [ "acceleration_x" ];
         image_ghost = false;
         image_size = [ 512, 512 ];
         name = [ "ax-%06d.png", "cycle" ];
         schedule {
             step = 5;
             var = "cycle";
         };
         type = "image";
     };
     dark {
         colormap = [ 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000 ];
         dir = "Collapse_Lmax_3_DD";
         image_ghost = false;
         image_size = [ 512, 512 ];
         name = [ "dark-%06d.png", "cycle" ];
         particle_list = [ "dark" ];
         schedule {
             step = 1;
             var = "cycle";
         };
         type = "image";
     };
     data {
         dir = "Collapse_Lmax_3_DD";
         field_list = [ "acceleration_x", "acceleration_y", "potential_copy" ];
         name = [ "data-%02d-%02d.h5", "count", "proc" ];
         schedule {
             step = 5.000000000000000;
             var = "time";
         };
         type = "data";
     };
     list = [ "dark", "po", "ax", "mesh", "data" ];
     mesh {
         colormap = [ 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000 ];
         dir = "Collapse_Lmax_3_DD";
         image_max = 6.000000000000000;
         image_size = [ 512, 512 ];
         image_type = "mesh";
         name = [ "mesh-%06d.png", "cycle" ];
         schedule {
             step = 5;
             var = "cycle";
         };
         type = "image";
     };
     pmass {
         colormap = [ 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000 ];
         dir = "Collapse_Lmax_3_DD";
         field_list = [ "particle_mass" ];
         image_ghost = false;
         image_size = [ 512, 512 ];
         name = [ "pmass-%06d.png", "cycle" ];
         schedule {
             step = 5;
             var = "cycle";
         };
         type = "image";
     };
     po {
         colormap = [ 0.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 0.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 0.000000000000000, 1.000000000000000, 1.000000000000000, 1.000000000000000 ];
         dir = "Collapse_Lmax_3_DD";
         field_list = [ "potential_copy" ];
         image_ghost = false;
         image_size = [ 512, 512 ];
         name = [ "po-%06d.png", "cycle" ];
         schedule {
             step = 5;
             var = "cycle";
         };
         type = "image";
     };
 }

 Particle {
     dark {
         attributes = [ "x", "default", "y", "default", "z", "default", "vx", "default", "vy", "default", "vz", "default", "ax", "default", "ay", "default", "az", "default" ];
         constants = [ "mass", "default", 10.00000000000000 ];
         groups = [ "has_mass" ];
         position = [ "x", "y", "z" ];
         velocity = [ "vx", "vy", "vz" ];
     };
     list = [ "dark" ];
 }

 Solver {
     dd {
         coarse_level = 0;
         coarse_solve = "dd_root";
         domain_solve = "dd_domain";
         last_smooth = "dd_smooth";
         max_level = 3;
         min_level = -2;
         monitor_iter = 1;
         type = "dd";
     };
     dd_domain {
         coarse_level = -1;
         iter_max = 100;
         max_level = 4;
         min_level = -2;
         monitor_iter = 0;
         res_tol = 0.01000000000000000;
         solve_type = "tree";
         type = "bicgstab";
     };
     dd_root {
         coarse_level = -2;
         coarse_solve = "root_coarse";
         iter_max = 2;
         max_level = 0;
         min_level = -2;
         monitor_iter = 1;
         post_smooth = "root_post";
         pre_smooth = "root_pre";
         res_tol = 0.05000000000000000;
         solve_type = "level";
         type = "mg0";
     };
     dd_smooth {
         iter_max = 1;
         monitor_iter = 1;
         solve_type = "leaf";
         type = "jacobi";
     };
     list = [ "dd", "dd_root", "dd_domain", "dd_smooth", "root_coarse", "root_pre", "root_post" ];
     root_coarse {
         iter_max = 100;
         monitor_iter = 1;
         res_tol = 0.01000000000000000;
         solve_type = "block";
         type = "cg";
     };
     root_post {
         iter_max = 2;
         solve_type = "level";
         type = "jacobi";
     };
     root_pre {
         iter_max = 2;
         solve_type = "level";
         type = "jacobi";
     };
 }

 Stopping {
     cycle = 40;
 }
